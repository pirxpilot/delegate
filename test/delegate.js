var delegate = require('../');

var html = [
  '<ul id="first">',
    '<li><a class="link-1"></a></li>',
    '<li><span class="icon"></span><a class="link-2"></a></li>',
  '</ul>',
  '<ul>',
    '<li><a class="link-3"></li>',
  '</ui>'
].join('');

describe('delegate', function () {
  beforeEach(function() {
    document.body.innerHTML = html;
    this.ul = document.querySelector('ul#first');
  });

  it('must handle events when bound', function () {
    var clicks = 0;
    var ul = this.ul;
    var link1 = document.querySelector('.link-1');

    function handle() {
      this.should.eql(ul);
      clicks++;
    }

    var h = delegate.bind(this.ul, 'li a', 'click', handle);

    link1.click();
    clicks.should.eql(1);

    delegate.unbind(this.ul, 'click', h);
  });

  it('must ignore events generated by elements that do not match selector', function () {
    var clicks = 0;
    var span = document.querySelector('span');

    function handle() {
      clicks++;
    }

    var h = delegate.bind(this.ul, 'li a', 'click', handle);

    span.click();
    clicks.should.eql(0);

    delegate.unbind(this.ul, 'click', h);
  });

  it('must ignore events generated by elements that are not children', function () {
    var clicks = 0;
    var link3 = document.querySelector('.link-3');

    var p = link3;
    while(p) {
      p = p.parentNode;
    }

    function handle() {
      clicks++;
    }

    var h = delegate.bind(this.ul, 'li a', 'click', handle);

    clicks.should.eql(0);
    link3.click();
    clicks.should.eql(0);

    delegate.unbind(this.ul, 'click', h);
  });


});
